openapi: 3.0.0
info:
  title: Photo Rating API
  version: 1.0.0
paths:
  /api/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                gender:
                  type: string
                age:
                  type: integer
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  userId:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/forgot-password:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/reset-password:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/profile:
    get:
      summary: Get user profile
      responses:
        '200':
          description: User profile data
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
                  gender:
                    type: string
                  age:
                    type: integer
                  points:
                    type: integer
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      summary: Update user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                gender:
                  type: string
                age:
                  type: integer
      responses:
        '200':
          description: Profile updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/photos/upload:
    post:
      summary: Upload a photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imageData:
                  type: string
                  description: Base64 encoded image data
      responses:
        '201':
          description: Photo uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  photoId:
                    type: string
        '400':
          description: Image size exceeds limit
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/photos/add-to-rating:
    post:
      summary: Add photo to rating list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
      responses:
        '200':
          description: Photo added to rating list
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  points:
                    type: integer
        '400':
          description: Not enough points
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/photos/remove-from-rating:
    post:
      summary: Remove photo from rating list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
      responses:
        '200':
          description: Photo removed from rating list
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Photo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/photos/for-rating:
    get:
      summary: Get photos for rating with filters
      parameters:
        - name: gender
          in: query
          description: Filter by gender
          required: false
          schema:
            type: string
        - name: minAge
          in: query
          description: Minimum age filter
          required: false
          schema:
            type: integer
        - name: maxAge
          in: query
          description: Maximum age filter
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: List of photos for rating
          content:
            application/json:
              schema:
                type: object
                properties:
                  photos:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        imageData:
                          type: string
                        userId:
                          type: string
                        user:
                          type: object
                          properties:
                            gender:
                              type: string
                            age:
                              type: integer
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
  /api/photos/rate:
    post:
      summary: Rate a photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                score:
                  type: integer
      responses:
        '200':
          description: Photo rated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  points:
                    type: integer
        '400':
          description: Cannot rate own photo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Photo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/photos/{photoId}/stats:
    get:
      summary: Get rating statistics for a photo
      parameters:
        - name: photoId
          in: path
          description: ID of the photo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rating statistics for the photo
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: object
                    properties:
                      totalRatings:
                        type: integer
                      averageScore:
                        type: number
                      byGender:
                        type: object
                        properties:
                          male:
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
                          female:
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
                          other:
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
                      byAge:
                        type: object
                        properties:
                          '18-25':
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
                          '26-35':
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
                          '36+':
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
        '404':
          description: Photo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
