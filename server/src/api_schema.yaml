openapi: 3.0.0
info:
  title: Photo Rating API
  description: API for a photo rating application with user authentication, photo management, and rating system.
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
    description: Local development server
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                age:
                  type: integer
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      name:
                        type: string
                      gender:
                        type: string
                      age:
                        type: integer
                      points:
                        type: integer
        '400':
          description: Email already registered
        '500':
          description: Registration failed
  /login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      name:
                        type: string
                      gender:
                        type: string
                      age:
                        type: integer
                      points:
                        type: integer
        '400':
          description: Invalid credentials
        '500':
          description: Login failed
  /forgot-password:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Reset token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  resetToken:
                    type: string
        '404':
          description: User not found
        '500':
          description: Forgot password failed
  /reset-password:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resetToken:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Invalid or expired reset token
        '500':
          description: Reset password failed
  /profile:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      name:
                        type: string
                      gender:
                        type: string
                      age:
                        type: integer
                      points:
                        type: integer
        '401':
          description: Authentication token required
        '403':
          description: Invalid token
        '404':
          description: User not found
        '500':
          description: Failed to fetch profile
    put:
      summary: Update user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                age:
                  type: integer
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      name:
                        type: string
                      gender:
                        type: string
                      age:
                        type: integer
                      points:
                        type: integer
        '401':
          description: Authentication token required
        '403':
          description: Invalid token
        '404':
          description: User not found
        '500':
          description: Failed to update profile
  /photos/upload:
    post:
      summary: Upload a photo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imageData:
                  type: string
                  description: Base64 encoded image data
      responses:
        '201':
          description: Photo uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  photoId:
                    type: string
        '400':
          description: Image size exceeds 1MB limit
        '401':
          description: Authentication token required
        '403':
          description: Invalid token
        '500':
          description: Photo upload failed
  /photos/add-to-rating:
    post:
      summary: Add photo to rating list
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
      responses:
        '200':
          description: Photo added to rating list
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  points:
                    type: integer
        '400':
          description: Not enough points to add photo to rating list
        '401':
          description: Authentication token required
        '403':
          description: Invalid token
        '404':
          description: Photo not found
        '500':
          description: Failed to add photo to rating list
  /photos/remove-from-rating:
    post:
      summary: Remove photo from rating list
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
      responses:
        '200':
          description: Photo removed from rating list
        '401':
          description: Authentication token required
        '403':
          description: Invalid token
        '404':
          description: Photo not found
        '500':
          description: Failed to remove photo from rating list
  /photos/for-rating:
    get:
      summary: Get photos for rating with filters
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: gender
          schema:
            type: string
            enum: [male, female, other]
          required: false
        - in: query
          name: minAge
          schema:
            type: integer
          required: false
        - in: query
          name: maxAge
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Photos fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  photos:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        imageData:
                          type: string
                        userId:
                          type: string
                        user:
                          type: object
                          properties:
                            gender:
                              type: string
                            age:
                              type: integer
        '401':
          description: Authentication token required
        '403':
          description: Invalid token
        '500':
          description: Failed to fetch photos for rating
  /photos/rate:
    post:
      summary: Rate a photo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                score:
                  type: integer
      responses:
        '200':
          description: Photo rated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  points:
                    type: integer
        '400':
          description: Cannot rate your own photo
        '401':
          description: Authentication token required
        '403':
          description: Invalid token
        '404':
          description: Photo not found
        '500':
          description: Failed to rate photo
  /photos/{photoId}/stats:
    get:
      summary: Get rating statistics for a photo
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: photoId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Rating statistics fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: object
                    properties:
                      totalRatings:
                        type: integer
                      averageScore:
                        type: number
                      byGender:
                        type: object
                        properties:
                          male:
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
                          female:
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
                          other:
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
                      byAge:
                        type: object
                        properties:
                          '18-25':
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
                          '26-35':
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
                          '36+':
                            type: object
                            properties:
                              count:
                                type: integer
                              average:
                                type: number
        '401':
          description: Authentication token required
        '403':
          description: Invalid token
        '404':
          description: Photo not found
        '500':
          description: Failed to fetch rating stats
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
